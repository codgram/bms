@page "/works/custom/headers/{customWorkHeaderId}/edit"
@using Microsoft.AspNetCore.Identity
@inject ISnackbar Snackbar
@inject IJSRuntime _jsRuntime
@inject HttpClient _client
@inject NavigationManager _navigationManager
@* @attribute [Authorize(Roles = "Owner, Admin")] *@

<PageTitle>Custom Works - Edit</PageTitle>

<h4 class="mt-5">Edit Work</h4>
<MudPaper Elevation="25" Class="mb-2 mt-4">
    <MudToolBar>
        <MudText>
            <Navigation />
        </MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Outlined.MoreVert" Color="Color.Inherit" />
    </MudToolBar>
</MudPaper>


<MudPaper Elevation="25" Class="mb-2 mt-4 p-5">
    <EditForm Model="@CustomWorkHeader" OnValidSubmit="OnValidSubmit" OnInvalidSubmit="OnInValidSubmit">
        <DataAnnotationsValidator/>

        <MudTextField Label="Document No" @bind-Value="CustomWorkHeader.DocumentNo" For="@(() => CustomWorkHeader.DocumentNo)" />
            
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Add</MudButton>
        </MudCardActions>
    </EditForm>
</MudPaper>




@code {

    [Parameter] public string customWorkHeaderId { get; set; }
    bool success;

    private CustomWorkHeader CustomWorkHeader = new CustomWorkHeader();

    protected override async Task OnInitializedAsync()
    {
        CustomWorkHeader = await _client.GetFromJsonAsync<CustomWorkHeader>($"api/works/custom/headers/{customWorkHeaderId}");
    }

    private async Task OnValidSubmit() 
    {
        var response = await _client.PostAsJsonAsync($"/api/works/custom/headers", CustomWorkHeader);

        if(response.IsSuccessStatusCode)
        {
            success = true;
            Snackbar.Add($"New Work is created", Severity.Success);
            _navigationManager.NavigateTo($"works/custom/headers");
        }
        else
        {
            success = false;
            var error = await response.Content.ReadAsStringAsync();
            Snackbar.Add($"{error}", Severity.Error);
            
        }
    }


    private void OnInValidSubmit() 
    {
        success = false;
        Snackbar.Add($"Please make sure to fill all necessary data!", Severity.Error);

    }


}